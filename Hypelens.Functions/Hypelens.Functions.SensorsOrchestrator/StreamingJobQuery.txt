
WITH 
HASHTAGS_QRY AS 
(
    SELECT 
    analysedtweets.id as sensorId, 
    analysedtweets.tenantId as tenantId, 
    analysedtweets.sentiment.polarityScores.Positive as polarity,
    LOWER(Hashtags.ArrayValue) AS hashtags,
    System.Timestamp as Time
    FROM analysedtweets TIMESTAMP BY CreatedAt
    CROSS APPLY GetArrayElements(analysedtweets.hashtags) AS Hashtags
),
MENTIONS_QRY AS 
(
    SELECT 
    analysedtweets.id as sensorId, 
    analysedtweets.tenantId as tenantId, 
    Mentions.ArrayValue AS mentions,
    System.Timestamp as Time
    FROM analysedtweets TIMESTAMP BY CreatedAt
    CROSS APPLY GetArrayElements(analysedtweets.mentions) AS Mentions
)

SELECT 
    udf.uuidv4(0) as id,
    sensorId as sensorId,
    tenantId,
    mentions AS mentions,
	COUNT(*) AS count,
    System.TimeStamp() AS time
INTO blobmentions
FROM MENTIONS_QRY
GROUP BY
    tenantId,
    sensorId,
    mentions,
	TumblingWindow(minute, 30)
HAVING [Count] > 1

SELECT 
    udf.uuidv4(0) as id,
    sensorId as sensorId,
    tenantId,
    hashTags AS hashtag,
	COUNT(*) AS count,
    AVG(polarity) as polarity,
    System.TimeStamp() AS time
INTO blobhashtags
FROM HASHTAGS_QRY
GROUP BY
    tenantId,
    sensorId,
    hashtags,
	TumblingWindow(minute, 30)
HAVING [Count] > 1

SELECT 
    analysedtweets.id as sensorId,
    analysedtweets.tenantId as tenantId, 
    analysedtweets.location,
    COUNT(*) AS Count,
    System.Timestamp as Time
INTO bloblocations
FROM analysedtweets TIMESTAMP BY CreatedAt
GROUP BY
    analysedtweets.tenantId,
    analysedtweets.id,
    analysedtweets.location,
	TumblingWindow(minute, 30)
HAVING [location] IS NOT NULL

SELECT 
    analysedtweets.id as sensorId,
    analysedtweets.tenantId as tenantId, 
    analysedtweets.createdBy,
    COUNT(*) AS Count,
    System.Timestamp as Time
INTO blobinfluencers
FROM analysedtweets TIMESTAMP BY CreatedAt
GROUP BY
    analysedtweets.tenantId,
    analysedtweets.id,
    analysedtweets.createdBy,
	TumblingWindow(minute, 30)
HAVING [Count] > 1



function main(fromDateTime) 
{
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) 
    {
        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
        return v.toString(16);
    });
}